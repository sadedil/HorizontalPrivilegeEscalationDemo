# Below line for Visual Studio
@user1token=...

# Login with user1

POST {{host}}/login
Content-Type: application/json

{
  "email": "email1@example.com",
  "password": "P@ssword1"
}

# This syntax only works with Rider
# > {% client.global.set("user1token", response.body.access_token); %}
# For visual Studio, please set the top variable (@user1token) manually after login

###

# Vulnerable Endpoint: 1/2: Get email1 with user1's token
# It should work, because the email1 belongs to user1

GET {{host}}/email/1/vulnerable-example
Content-Type: application/json
Authorization: Bearer {{user1token}}
###

# Vulnerable Endpoint: 2/2: Get email2 with user1's token
# It should NOT work, because the email1 does NOT belong to user1
# But unfortunately it is working

GET {{host}}/email/2/vulnerable-example
Content-Type: application/json
Authorization: Bearer {{user1token}}

###

# Safe Endpoint: 1/2: Get email1 with user1's token
# It should work, this is the expected scenario

GET {{host}}/email/1/safe-example
Content-Type: application/json
Authorization: Bearer {{user1token}}

###

# Safe Endpoint: 2/2: Get email2 with user1's token
# It will return No Content (or you can prefer return 403), because because the email1 does NOT belong to user1
# It can be customized to return 403 instead

GET {{host}}/email/2/safe-example
Content-Type: application/json
Authorization: Bearer {{user1token}}